"""
Django settings for stiri project.

Generated by 'django-admin startproject' using Django 2.2.28.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from pymongo import MongoClient






  
 




# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '79cmlhae@z=2t_^$0^-r-z(-4x9*be=1-=+#(#a@=3_)g0dbj)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'news',
    'django_apscheduler',
    

]
APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stiri.urls'

TEMPLATES = [
    {

       
       
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stiri.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases



# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'


MONGODB_DATABASES = [
    {
        'NAME': 'news',  
        'HOST': 'localhost',  
        'PORT': 27017, 
   
        'ALIAS': 'default',  
    },
]


# Function to get the MongoDB client based on the database alias
def get_mongodb(alias='default'):
     # Retrieve the MongoDB configuration for the specified alias
    config = [db for db in MONGODB_DATABASES if db['ALIAS'] == alias][0]
    client = MongoClient(config['HOST'], config['PORT'])
    db = client[config['NAME']]
    return db


# Configuration to use PyMongo for performing migrations in Django
DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'news',  
        'ENFORCE_SCHEMA': False,
    },
}








APSCHEDULER_JOBSTORES = {
    'default': {
        'ENGINE': 'django_apscheduler.jobstores:DjangoJobStore',  
         'OPTIONS': {
             'database_url': 'mongodb://localhost:27017/news', 
          
            
            
         },
    },
}





LOGGING = {  
    "version": 1,  
    "disable_existing_loggers": False,  
    "handlers": {  
        "console": {  
            "class": "logging.StreamHandler",  
        },  
    },  
    "root": {  
        "handlers": ["console"],  
        "level": "INFO",  
    },  
}  



